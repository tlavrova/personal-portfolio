<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/App.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/App.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import './App.css';&#10;import Header from './components/Header';&#10;import Home from './components/Home';&#10;import About from './components/About';&#10;&#10;function App() {&#10;  return (&#10;    &lt;div className=&quot;App&quot;&gt;&#10;      &lt;Header /&gt;&#10;      &lt;main&gt;&#10;        &lt;Home /&gt;&#10;        &lt;About /&gt;&#10;        &lt;section id=&quot;projects&quot;&gt;&#10;          {/* Projects section content will go here */}&#10;        &lt;/section&gt;&#10;        &lt;section id=&quot;skills&quot;&gt;&#10;          {/* Skills section content will go here */}&#10;        &lt;/section&gt;&#10;        &lt;section id=&quot;contact&quot;&gt;&#10;          {/* Contact section content will go here */}&#10;        &lt;/section&gt;&#10;      &lt;/main&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;export default App;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;import './App.css';&#10;import Header from './components/Header';&#10;import Home from './components/Home';&#10;import About from './components/About';&#10;import Projects from './components/Projects';&#10;&#10;function App() {&#10;  return (&#10;    &lt;div className=&quot;App&quot;&gt;&#10;      &lt;Header /&gt;&#10;      &lt;main&gt;&#10;        &lt;Home /&gt;&#10;        &lt;About /&gt;&#10;        &lt;Projects /&gt;&#10;        &lt;section id=&quot;skills&quot;&gt;&#10;          {/* Skills section content will go here */}&#10;        &lt;/section&gt;&#10;        &lt;section id=&quot;contact&quot;&gt;&#10;          {/* Contact section content will go here */}&#10;        &lt;/section&gt;&#10;      &lt;/main&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;export default App;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/Projects.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/Projects.tsx" />
              <option name="originalContent" value="import React from 'react';&#10;import './styles/Projects.css';&#10;import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';&#10;import { faGithub } from '@fortawesome/free-brands-svg-icons';&#10;import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';&#10;&#10;// Define a type for project objects&#10;interface Project {&#10;    id: number;&#10;    title: string;&#10;    description: string;&#10;    technologies: string[];&#10;    image: string;&#10;    github?: string;&#10;    liveDemo?: string;&#10;}&#10;&#10;const Projects: React.FC = () =&gt; {&#10;    // Sample projects data - replace with your actual projects&#10;    const projects: Project[] = [&#10;        {&#10;            id: 1,&#10;            title: &quot;Portfolio Website&quot;,&#10;            description: &quot;A personal portfolio website built to showcase my projects and skills.&quot;,&#10;            technologies: [&quot;React&quot;, &quot;TypeScript&quot;, &quot;CSS&quot;],&#10;            image: &quot;/images/portfolio-preview.jpg&quot;,&#10;            github: &quot;https://github.com/username/portfolio&quot;,&#10;            liveDemo: &quot;https://myportfolio.com&quot;&#10;        },&#10;        {&#10;            id: 2,&#10;            title: &quot;E-commerce Platform&quot;,&#10;            description: &quot;A fully responsive e-commerce website with product filtering and cart functionality.&quot;,&#10;            technologies: [&quot;React&quot;, &quot;Redux&quot;, &quot;Node.js&quot;, &quot;Express&quot;, &quot;MongoDB&quot;],&#10;            image: &quot;/images/ecommerce-preview.jpg&quot;,&#10;            github: &quot;https://github.com/username/ecommerce&quot;,&#10;            liveDemo: &quot;https://myecommerce.com&quot;&#10;        },&#10;        {&#10;            id: 3,&#10;            title: &quot;Task Management App&quot;,&#10;            description: &quot;A productivity application that helps users organize and track their tasks and projects.&quot;,&#10;            technologies: [&quot;Angular&quot;, &quot;TypeScript&quot;, &quot;Firebase&quot;],&#10;            image: &quot;/images/taskapp-preview.jpg&quot;,&#10;            github: &quot;https://github.com/username/taskmanager&quot;&#10;        }&#10;    ];&#10;&#10;    return (&#10;        &lt;section id=&quot;projects&quot; className=&quot;projects-section&quot;&gt;&#10;            &lt;h2&gt;My Projects&lt;/h2&gt;&#10;            &lt;div className=&quot;projects-container&quot;&gt;&#10;                {projects.map(project =&gt; (&#10;                    &lt;div className=&quot;project-card&quot; key={project.id}&gt;&#10;                        &lt;div className=&quot;project-image&quot;&gt;&#10;                            &lt;img src={project.image} alt={project.title} /&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;project-content&quot;&gt;&#10;                            &lt;h3&gt;{project.title}&lt;/h3&gt;&#10;                            &lt;p&gt;{project.description}&lt;/p&gt;&#10;                            &lt;div className=&quot;project-technologies&quot;&gt;&#10;                                {project.technologies.map((tech, index) =&gt; (&#10;                                    &lt;span key={index} className=&quot;tech-badge&quot;&gt;{tech}&lt;/span&gt;&#10;                                ))}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;project-links&quot;&gt;&#10;                                {project.github &amp;&amp; (&#10;                                    &lt;a href={project.github} target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; className=&quot;project-link&quot;&gt;&#10;                                        &lt;FontAwesomeIcon icon={faGithub} /&gt; Source&#10;                                    &lt;/a&gt;&#10;                                )}&#10;                                {project.liveDemo &amp;&amp; (&#10;                                    &lt;a href={project.liveDemo} target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; className=&quot;project-link&quot;&gt;&#10;                                        &lt;FontAwesomeIcon icon={faExternalLinkAlt} /&gt; Live Demo&#10;                                    &lt;/a&gt;&#10;                                )}&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                ))}&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;    );&#10;};&#10;&#10;export default Projects;&#10;" />
              <option name="updatedContent" value="import React from 'react';&#10;import './styles/Projects.css';&#10;import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';&#10;import { faGithub } from '@fortawesome/free-brands-svg-icons';&#10;import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';&#10;import portfolioPreview from '../assets/images/portfolio-preview.jpg';&#10;// Import other images as needed, or use placeholder images&#10;&#10;// Define a type for project objects&#10;interface Project {&#10;    id: number;&#10;    title: string;&#10;    description: string;&#10;    technologies: string[];&#10;    image: string;&#10;    github?: string;&#10;    liveDemo?: string;&#10;}&#10;&#10;const Projects: React.FC = () =&gt; {&#10;    // Sample projects data - replace with your actual projects&#10;    const projects: Project[] = [&#10;        {&#10;            id: 1,&#10;            title: &quot;Portfolio Website&quot;,&#10;            description: &quot;A personal portfolio website built to showcase my projects and skills.&quot;,&#10;            technologies: [&quot;React&quot;, &quot;TypeScript&quot;, &quot;CSS&quot;],&#10;            image: portfolioPreview,&#10;            github: &quot;https://github.com/username/portfolio&quot;,&#10;            liveDemo: &quot;https://myportfolio.com&quot;&#10;        },&#10;        {&#10;            id: 2,&#10;            title: &quot;E-commerce Platform&quot;,&#10;            description: &quot;A fully responsive e-commerce website with product filtering and cart functionality.&quot;,&#10;            technologies: [&quot;React&quot;, &quot;Redux&quot;, &quot;Node.js&quot;, &quot;Express&quot;, &quot;MongoDB&quot;],&#10;            image: &quot;https://via.placeholder.com/800x600?text=E-commerce+Preview&quot;,&#10;            github: &quot;https://github.com/username/ecommerce&quot;,&#10;            liveDemo: &quot;https://myecommerce.com&quot;&#10;        },&#10;        {&#10;            id: 3,&#10;            title: &quot;Task Management App&quot;,&#10;            description: &quot;A productivity application that helps users organize and track their tasks and projects.&quot;,&#10;            technologies: [&quot;Angular&quot;, &quot;TypeScript&quot;, &quot;Firebase&quot;],&#10;            image: &quot;https://via.placeholder.com/800x600?text=Task+App+Preview&quot;,&#10;            github: &quot;https://github.com/username/taskmanager&quot;&#10;        }&#10;    ];&#10;&#10;    return (&#10;        &lt;section id=&quot;projects&quot; className=&quot;projects-section&quot;&gt;&#10;            &lt;h2&gt;My Projects&lt;/h2&gt;&#10;            &lt;div className=&quot;projects-container&quot;&gt;&#10;                {projects.map(project =&gt; (&#10;                    &lt;div className=&quot;project-card&quot; key={project.id}&gt;&#10;                        &lt;div className=&quot;project-image&quot;&gt;&#10;                            &lt;img src={project.image} alt={project.title} /&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;div className=&quot;project-content&quot;&gt;&#10;                            &lt;h3&gt;{project.title}&lt;/h3&gt;&#10;                            &lt;p&gt;{project.description}&lt;/p&gt;&#10;                            &lt;div className=&quot;project-technologies&quot;&gt;&#10;                                {project.technologies.map((tech, index) =&gt; (&#10;                                    &lt;span key={index} className=&quot;tech-badge&quot;&gt;{tech}&lt;/span&gt;&#10;                                ))}&#10;                            &lt;/div&gt;&#10;                            &lt;div className=&quot;project-links&quot;&gt;&#10;                                {project.github &amp;&amp; (&#10;                                    &lt;a href={project.github} target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; className=&quot;project-link&quot;&gt;&#10;                                        &lt;FontAwesomeIcon icon={faGithub} /&gt; Source&#10;                                    &lt;/a&gt;&#10;                                )}&#10;                                {project.liveDemo &amp;&amp; (&#10;                                    &lt;a href={project.liveDemo} target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot; className=&quot;project-link&quot;&gt;&#10;                                        &lt;FontAwesomeIcon icon={faExternalLinkAlt} /&gt; Live Demo&#10;                                    &lt;/a&gt;&#10;                                )}&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                ))}&#10;            &lt;/div&gt;&#10;        &lt;/section&gt;&#10;    );&#10;};&#10;&#10;export default Projects;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/styles/Projects.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/styles/Projects.css" />
              <option name="updatedContent" value="/* Projects Section Styling */&#10;.projects-section {&#10;    padding: 80px 20px;&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;}&#10;&#10;.projects-section h2 {&#10;    text-align: center;&#10;    margin-bottom: 50px;&#10;    font-size: 2.5rem;&#10;    color: #333;&#10;}&#10;&#10;.projects-container {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));&#10;    grid-gap: 30px;&#10;    justify-content: center;&#10;}&#10;&#10;.project-card {&#10;    background-color: #fff;&#10;    border-radius: 8px;&#10;    overflow: hidden;&#10;    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);&#10;    transition: transform 0.3s ease, box-shadow 0.3s ease;&#10;}&#10;&#10;.project-card:hover {&#10;    transform: translateY(-5px);&#10;    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);&#10;}&#10;&#10;.project-image {&#10;    height: 200px;&#10;    overflow: hidden;&#10;}&#10;&#10;.project-image img {&#10;    width: 100%;&#10;    height: 100%;&#10;    object-fit: cover;&#10;    transition: transform 0.5s ease;&#10;}&#10;&#10;.project-card:hover .project-image img {&#10;    transform: scale(1.05);&#10;}&#10;&#10;.project-content {&#10;    padding: 20px;&#10;}&#10;&#10;.project-content h3 {&#10;    font-size: 1.5rem;&#10;    margin-bottom: 10px;&#10;    color: #333;&#10;}&#10;&#10;.project-content p {&#10;    color: #666;&#10;    margin-bottom: 15px;&#10;    line-height: 1.5;&#10;}&#10;&#10;.project-technologies {&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 8px;&#10;    margin-bottom: 15px;&#10;}&#10;&#10;.tech-badge {&#10;    background-color: #f0f0f0;&#10;    color: #555;&#10;    padding: 5px 10px;&#10;    border-radius: 15px;&#10;    font-size: 0.8rem;&#10;    font-weight: 500;&#10;}&#10;&#10;.project-links {&#10;    display: flex;&#10;    gap: 15px;&#10;}&#10;&#10;.project-link {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    gap: 5px;&#10;    color: #3498db;&#10;    text-decoration: none;&#10;    font-weight: 500;&#10;    transition: color 0.2s ease;&#10;}&#10;&#10;.project-link:hover {&#10;    color: #2980b9;&#10;}&#10;&#10;/* Responsive adjustments */&#10;@media (max-width: 768px) {&#10;    .projects-section {&#10;        padding: 60px 15px;&#10;    }&#10;    &#10;    .projects-section h2 {&#10;        font-size: 2rem;&#10;        margin-bottom: 30px;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .projects-container {&#10;        grid-template-columns: 1fr;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>